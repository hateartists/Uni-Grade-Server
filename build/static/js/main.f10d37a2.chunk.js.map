{"version":3,"sources":["Register.js","LookUp.js","Assignment.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","returnData","callback","state","calif","_this2","usr","document","getElementById","value","email","pass","require","post","user","mail","pasw","then","response","setState","react_default","a","createElement","className","mdbreact","style","width","htmlFor","type","id","onClick","register","bind","onSubmit","Component","Grades","callback2","get","data","Assignment","_this$props$assi","assi","Cal","DescMateria","FooterPage","build_default","App","All_Grades","gradesJSON","grades","console","log","src_Register_0","LookUp","map","index","src_Assignment_0","Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f10d37a2.chunk.js","sourcesContent":["import React, { Component }from 'react';\r\nimport { Button, Card, CardBody, CardTitle, CardText, Col } from 'mdbreact';\r\nimport './Register.css'\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      calif: [] \r\n    };\r\n  }\r\n\r\n  returnData = () =>{\r\n    this.props.callback(this.state.calif)\r\n  }\r\n\r\n  register(){\r\n    let usr = document.getElementById('user').value\r\n    let email = document.getElementById('mail').value\r\n    let pass = document.getElementById('pass').value\r\n    const axios = require('axios');\r\n    axios.post('http://localhost:8000/api/register/', {\r\n        user: usr,\r\n        mail: email,\r\n        pasw: pass\r\n    }).then((response) => {\r\n      this.setState({\r\n        calif: response\r\n      })\r\n    }).then(this.returnData)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"separator\">\r\n      <Col>\r\n        <Card style={{ width: \"22rem\" }}>\r\n          <CardBody>\r\n            <CardTitle>Registro</CardTitle>\r\n            <CardText>\r\n              Para obtener rápidamente tus calificaciones, registrate con un\r\n              usuario, además de tu correo institucional y contraseña.\r\n            </CardText>\r\n            <form>\r\n            <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n              Usuario:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"user\"\r\n              className=\"form-control\"\r\n            />\r\n            <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n              Correo Institucional\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"mail\"\r\n              className=\"form-control\"\r\n            />\r\n            <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n              Contraseña\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"pass\"\r\n              className=\"form-control\"\r\n            />\r\n            <Button onClick={this.register.bind(this)} onSubmit={this.register.bind(this)}>Registrarse</Button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register;","import React, { Component }from 'react';\r\nimport { Button, Card, CardBody, CardTitle, CardText, Col } from 'mdbreact';\r\n\r\nclass Grades extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      calif: [] \r\n    };\r\n  }\r\n\r\n  returnData = () =>{\r\n    this.props.callback2(this.state.calif)\r\n  }\r\n\r\n  register(){\r\n    let usr = document.getElementById('userLookUp').value\r\n    const axios = require('axios');\r\n    axios.get('http://localhost:8000/api/grades/' + '?user=' + usr)\r\n    .then((response) => {\r\n      this.setState({\r\n        calif: response.data\r\n      })\r\n    }).then(this.returnData)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"separator\">\r\n      <Col>\r\n        <Card style={{ width: \"22rem\" }}>\r\n          <CardBody>\r\n            <CardTitle>Calificaciones</CardTitle>\r\n            <CardText>\r\n              Para ver tus calificaciones, pon el nombre de usuario con el que te registraste.\r\n            </CardText>\r\n            <form>\r\n            <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n              Usuario:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"userLookUp\"\r\n              className=\"form-control\"\r\n            />\r\n            <Button onClick={this.register.bind(this)} onSubmit={this.register.bind(this)}>¡Busca esos 60!</Button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Grades;","import React, { Component } from 'react'\r\nimport { Button, Card, CardBody, CardTitle, CardText, Col } from 'mdbreact';\r\nimport './Assignment.css'\r\n\r\nclass Assignment extends Component{\r\n  render(){\r\n    const { Cal, DescMateria } = this.props.assi;\r\n    return(\r\n      <div className=\"inliner\">\r\n        <div className=\"Assignment\">\r\n          <Col>\r\n            <Card style={{ width: \"22rem\" }}>\r\n              <CardBody>\r\n                <CardTitle>{DescMateria}</CardTitle>\r\n                  <CardText>\r\n                    Calificación: {Cal}\r\n                  </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Assignment;","import React, { Component } from \"react\";\r\nimport CookieConsent from \"react-cookie-consent\";\r\n\r\nclass FooterPage extends Component {\r\n  render() {\r\n    return (\r\n      <CookieConsent>\r\n        Tu correo institucional y contraseña no son guardados, no te preocupes.\r\n      </CookieConsent>\r\n    );}\r\n}\r\n\r\nexport default FooterPage;\r\n\r\n","import React, { Component } from 'react';\nimport RegCard from './Register'\nimport LookUp from './LookUp'\nimport Ass from './Assignment'\nimport Footer from './Footer'\n\nimport './App.css';\nimport Assignment from './Assignment';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      grades: [] \n    };\n  }\n  All_Grades = (gradesJSON) => {\n    this.setState({\n      grades: gradesJSON\n    })\n    console.log(this.state.grades)\n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"main\">\n        <div className=\"register_panel\">\n          <RegCard callback={this.All_Grades}/>\n        </div>\n        <div className=\"login_panel\">\n          <LookUp callback2={this.All_Grades}/>\n        </div>\n        </div>\n        <div className=\"Grades-Container\">\n           {this.state.grades.map(function(data, index){\n                return (<Assignment assi = {data}/>)\n                }\n              )\n          } \n        </div>\n        <div className=\"Footer\">\n          <Footer/>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}